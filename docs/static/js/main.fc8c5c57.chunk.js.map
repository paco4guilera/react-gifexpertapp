{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","onFocus","select","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","reactDom","render","document","getElementById"],"mappings":"6MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,cAAC,WAAD,UACI,uBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKd,UACI,8CACA,uBACIO,YAAY,mBACZC,KAAK,OACLC,MAAOV,EACPW,SAvBU,SAACR,GAEvBF,EAAcE,EAAES,OAAOF,QAsBXG,QApBI,SAACV,GACjBA,EAAES,OAAOE,kB,+BCTJC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDACuCC,UAAUH,GADjD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGQA,EAAKC,OAHb,uBAGPC,EAHO,EAGPA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAR3B,kBAWZM,GAXY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEnC,OACI,qBAAKc,UAAU,yCAAf,SAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,OCFnBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SACtB,ECDwB,SAACA,GACzB,MAA0BjB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GACnBH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGnB,CAACpB,IACIqB,EDZ0BK,CAAa1B,GAAhCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBgB,EA1BM,WACjB,MAAoC5C,mBAAS,CAAC,iBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CACIA,cAAgBA,IAEpB,uBAEA,6BAEQ8C,EAAWnB,KAAI,SAAAT,GAAQ,OAEnB,aADA,CACC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc8c5c57.chunk.js","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) => { \r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value)\r\n    }\r\n    const selectInput = (e) => { \r\n        e.target.select();\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //setCategories([...categories, inputValue]);\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit}>\r\n                <h5>Add Category</h5>\r\n                <input\r\n                    placeholder='Write a category'\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    onFocus={selectInput}\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    //prop: PropTypes.Type.isRequired\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => { \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=N5x9GBYWGeMNJpVTF4vOVTCNkG7af6YA`\r\n        const resp = await fetch(url);\r\n        const { data } = await resp.json();\r\n        const gifs = data.map(img => { \r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    return gifs;\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id,title,url}) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeId'>\r\n            {/* <p>{ title }</p> */}\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const { data: images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            { loading && <p>Loading</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => { \r\n        getGifs(category).then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        })\r\n    },[category])\r\n    return state;\r\n}\r\n","import { Fragment, useState } from \"react\";\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nconst GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['Breaking Bad'])\r\n    \r\n    return (\r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={ setCategories}\r\n            />\r\n            <hr />\r\n    \r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        //(<li key={category}>{category}</li>)\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                        )\r\n                }\r\n            </ol>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nreactDom.render(\r\n    <GifExpertApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}